name: Build & Test

on:
  push:
    branches: "**"
  pull_request:
    branches: [master]
env:
  DOCKER_ENV_FILE: ".github/workflows/docker.env"
jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.4-alpine # should be the same version as used in .drone.yml, .github/workflows, Dockerfile and live
        env:
          POSTGRES_DB: "development"
          POSTGRES_USER: "dbuser"
          POSTGRES_PASSWORD: "dbpass"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      integresql:
        image: allaboutapps/integresql:latest
        env:
          PGHOST: "postgres"
          PGUSER: "dbuser"
          PGPASSWORD: "dbpass"
      mailhog:
        image: mailhog/mailhog
    steps:
      - uses: actions/checkout@v2.3.4
      # Setup docker buildx caching and building
      # based on: https://github.com/dtinth/github-actions-docker-layer-caching-poc/pull/1/files
      # also see: 
      # * https://github.com/actions/cache/issues/31
      # * https://dev.to/dtinth/caching-docker-builds-in-github-actions-which-approach-is-the-fastest-a-research-18ei
      # * https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      # * https://docs.docker.com/buildx/working-with-buildx/
      - uses: docker/setup-buildx-action@v1
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: docker build (target builder) from cache
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: allaboutapps.dev/aw/go-starter:builder-${{ github.sha }}
          target: builder
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          load: true # make the image available for local docker run commands
      - name: docker run builder
        run: docker run -d --env-file $DOCKER_ENV_FILE --network "${{ job.services.postgres.network }}" --name=builder -it allaboutapps.dev/aw/go-starter:builder-${GITHUB_SHA}
      - name: make tidy
        run: docker exec builder make tidy
      - name: make build
        run: docker exec builder make build
      - name: make test
        run: docker exec builder make test
      - name: git diff --exit-code
        # Note builder stage now includes .git, thus we rm it again to again diff with the original git workspace
        run: docker cp builder:/app ./post-build && rm -rf ./post-build/.git && git -C post-build diff --exit-code
      - name: Upload coverage to Codecov
        run: docker cp builder:/tmp/coverage.out ./coverage.out && bash <(curl -s https://codecov.io/bash)
      - name: Stop container
        if: ${{ always() }}
        run: docker stop builder
      - name: Remove container
        if: ${{ always() }}
        run: docker rm builder
  swagger-codegen-cli:
    runs-on: ubuntu-latest
    container: swaggerapi/swagger-codegen-cli
    steps:
      - uses: actions/checkout@v2.3.4
      - name: run the main swagger.yml validation
        run: java -jar /opt/swagger-codegen-cli/swagger-codegen-cli.jar validate -i ./api/swagger.yml
