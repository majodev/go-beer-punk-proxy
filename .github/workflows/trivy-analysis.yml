name: trivy
on:
  push:
    # Currently limited to master because of the following:
    # Workflows triggered by Dependabot on the "push" event run with read-only access. Uploading Code Scanning results requires write access.
    # To use Code Scanning with Dependabot, please ensure you are using the "pull_request" event for this workflow and avoid triggering on the "push" event for Dependabot branches.
    # See https://docs.github.com/en/code-security/secure-coding/configuring-code-scanning#scanning-on-push for more information on how to configure these events.
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]
jobs:
  trivy:
    name: Trivy
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.5

      # Setup docker buildx caching and building
      # based on: https://github.com/dtinth/github-actions-docker-layer-caching-poc/pull/1/files
      # also see: 
      # * https://github.com/actions/cache/issues/31
      # * https://dev.to/dtinth/caching-docker-builds-in-github-actions-which-approach-is-the-fastest-a-research-18ei
      # * https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      # * https://docs.docker.com/buildx/working-with-buildx/
      - uses: docker/setup-buildx-action@v1
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: docker build (target app) from cache
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: allaboutapps.dev/aw/go-starter:${{ github.sha }}
          target: app
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          load: true # make the image available for local docker run commands

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'allaboutapps.dev/aw/go-starter:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
