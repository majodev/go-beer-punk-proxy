// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Add Add
//
// swagger:model add
type Add string

const (

	// AddStart captures enum value "start"
	AddStart Add = "start"

	// AddMiddle captures enum value "middle"
	AddMiddle Add = "middle"

	// AddEnd captures enum value "end"
	AddEnd Add = "end"

	// AddDryHop captures enum value "dry hop"
	AddDryHop Add = "dry hop"
)

// for schema
var addEnum []interface{}

func init() {
	var res []Add
	if err := json.Unmarshal([]byte(`["start","middle","end","dry hop"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		addEnum = append(addEnum, v)
	}
}

func (m Add) validateAddEnum(path, location string, value Add) error {
	if err := validate.EnumCase(path, location, value, addEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this add
func (m Add) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAddEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
