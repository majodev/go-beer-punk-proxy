// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostRefreshPayload post refresh payload
//
// swagger:model postRefreshPayload
type PostRefreshPayload struct {

	// Refresh token to use for retrieving new token set
	// Example: 7503cd8a-c921-4368-a32d-6c1d01d86da9
	// Required: true
	// Format: uuid4
	RefreshToken *strfmt.UUID4 `json:"refresh_token"`
}

// Validate validates this post refresh payload
func (m *PostRefreshPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRefreshToken(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostRefreshPayload) validateRefreshToken(formats strfmt.Registry) error {

	if err := validate.Required("refresh_token", "body", m.RefreshToken); err != nil {
		return err
	}

	if err := validate.FormatOf("refresh_token", "body", "uuid4", m.RefreshToken.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post refresh payload based on context it is used
func (m *PostRefreshPayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PostRefreshPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostRefreshPayload) UnmarshalBinary(b []byte) error {
	var res PostRefreshPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
